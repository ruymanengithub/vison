#! $HOME/SOFTWARE/anaconda2/envs/vison/bin/ python


# IMPORT STUFF
import sys, os
from pdb import set_trace as stop

from optparse import OptionParser
from vison.eyegore.eyegore import Eyegore,_extpath
from vison.support import context
# END IMPORT


if __name__ == '__main__':
    
    parser = OptionParser()
    parser.add_option("-p","--path",dest="path",default='',help="day-path to be monitored.")
    parser.add_option("-B","--broadcast",dest="broadcast",default='None',help="Synchronize data to gateway folder at msslus")
    parser.add_option("-E","--elvis",dest="elvis",default=context.elvis,help="ELVIS version.")
    parser.add_option("-L","--lite",dest="lite",action="store_true",default=False,help="Run a lighter version of the program (no autom. HK-plots or image displays).")
    parser.add_option("-r","--rsync",dest="altpath",default='',help="rsync to an alternative local path.")
    parser.add_option("-g", "--log", dest="dolog", action="store_true", default=False,
                      help="keep a log")
    parser.add_option("-W","--Warnings",dest="doWarnings",action="store_true",default=False,
                      help="Raise warnings (via email and/or phone) if critical HK is OOL.")
    
    (options, args) = parser.parse_args()
    
    if options.path == '':
        parser.print_help()
        sys.exit()
        
    path = options.path
    broadcast = options.broadcast
    elvis = options.elvis
    altpath = options.altpath
    dolite = bool(options.lite)
    dolog = bool(options.dolog)
    doWarnings = bool(options.doWarnings)
    
    if broadcast != 'None':
        broadcast = os.path.join(_extpath,broadcast)
    else: 
        broadcast = None
    
    if not os.path.exists(path):
        sys.exit('HKmonitory.py: %s does not exist' % path)
    else:
        
        header = '\n\n#########################################################\n'+\
                 '#                                                       #\n'+\
                 '#                                                       #\n'+\
                 '#       starting EYEGORE on path:                        #\n'+\
                 '            %s                                           \n'+\
                 '#                                                       #\n'+\
                 '#                                                       #\n'+\
                 '#########################################################\n'
        
        print header % path
    
    
    app = Eyegore(path,broadcast=broadcast,elvis=elvis,dolite=dolite,
                  altpath=altpath,doWarnings=doWarnings,dolog=dolog)

